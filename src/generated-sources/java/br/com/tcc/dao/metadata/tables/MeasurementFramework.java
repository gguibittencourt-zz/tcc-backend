/*
 * This file is generated by jOOQ.
*/
package br.com.tcc.dao.metadata.tables;


import br.com.tcc.dao.metadata.App;
import br.com.tcc.dao.metadata.Keys;
import br.com.tcc.dao.metadata.tables.records.MeasurementFrameworkRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MeasurementFramework extends TableImpl<MeasurementFrameworkRecord> {

    private static final long serialVersionUID = -328564225;

    /**
     * The reference instance of <code>app.measurement_framework</code>
     */
    public static final MeasurementFramework MEASUREMENT_FRAMEWORK = new MeasurementFramework();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MeasurementFrameworkRecord> getRecordType() {
        return MeasurementFrameworkRecord.class;
    }

    /**
     * The column <code>app.measurement_framework.id_measurement_framework</code>.
     */
    public final TableField<MeasurementFrameworkRecord, Integer> ID_MEASUREMENT_FRAMEWORK = createField("id_measurement_framework", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>app.measurement_framework.name</code>.
     */
    public final TableField<MeasurementFrameworkRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(200).nullable(false), this, "");

    /**
     * The column <code>app.measurement_framework.id_reference_model</code>.
     */
    public final TableField<MeasurementFrameworkRecord, Integer> ID_REFERENCE_MODEL = createField("id_reference_model", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>app.measurement_framework.json_measurement_framework</code>.
     */
    public final TableField<MeasurementFrameworkRecord, Object> JSON_MEASUREMENT_FRAMEWORK = createField("json_measurement_framework", org.jooq.impl.DefaultDataType.getDefaultDataType("json"), this, "");

    /**
     * Create a <code>app.measurement_framework</code> table reference
     */
    public MeasurementFramework() {
        this("measurement_framework", null);
    }

    /**
     * Create an aliased <code>app.measurement_framework</code> table reference
     */
    public MeasurementFramework(String alias) {
        this(alias, MEASUREMENT_FRAMEWORK);
    }

    private MeasurementFramework(String alias, Table<MeasurementFrameworkRecord> aliased) {
        this(alias, aliased, null);
    }

    private MeasurementFramework(String alias, Table<MeasurementFrameworkRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return App.APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<MeasurementFrameworkRecord, Integer> getIdentity() {
        return Keys.IDENTITY_MEASUREMENT_FRAMEWORK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MeasurementFrameworkRecord> getPrimaryKey() {
        return Keys.KEY_MEASUREMENT_FRAMEWORK_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MeasurementFrameworkRecord>> getKeys() {
        return Arrays.<UniqueKey<MeasurementFrameworkRecord>>asList(Keys.KEY_MEASUREMENT_FRAMEWORK_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<MeasurementFrameworkRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<MeasurementFrameworkRecord, ?>>asList(Keys.ID_REFERENCE_MODEL_MEASUREMENT_FRAMEWORK_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MeasurementFramework as(String alias) {
        return new MeasurementFramework(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MeasurementFramework rename(String name) {
        return new MeasurementFramework(name, null);
    }
}
