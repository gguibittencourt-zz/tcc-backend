/*
 * This file is generated by jOOQ.
*/
package br.com.tcc.dao.metadata.tables.records;


import br.com.tcc.dao.metadata.tables.Company;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CompanyRecord extends UpdatableRecordImpl<CompanyRecord> implements Record5<Integer, String, Integer, Integer, String> {

    private static final long serialVersionUID = 1252920100;

    /**
     * Setter for <code>app.company.id_company</code>.
     */
    public void setIdCompany(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>app.company.id_company</code>.
     */
    public Integer getIdCompany() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>app.company.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>app.company.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>app.company.contributors</code>.
     */
    public void setContributors(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>app.company.contributors</code>.
     */
    public Integer getContributors() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>app.company.projects</code>.
     */
    public void setProjects(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>app.company.projects</code>.
     */
    public Integer getProjects() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>app.company.occupation_area</code>.
     */
    public void setOccupationArea(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>app.company.occupation_area</code>.
     */
    public String getOccupationArea() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, String, Integer, Integer, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, String, Integer, Integer, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Company.COMPANY.ID_COMPANY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Company.COMPANY.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Company.COMPANY.CONTRIBUTORS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Company.COMPANY.PROJECTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Company.COMPANY.OCCUPATION_AREA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getIdCompany();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getContributors();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getProjects();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getOccupationArea();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CompanyRecord value1(Integer value) {
        setIdCompany(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CompanyRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CompanyRecord value3(Integer value) {
        setContributors(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CompanyRecord value4(Integer value) {
        setProjects(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CompanyRecord value5(String value) {
        setOccupationArea(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CompanyRecord values(Integer value1, String value2, Integer value3, Integer value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CompanyRecord
     */
    public CompanyRecord() {
        super(Company.COMPANY);
    }

    /**
     * Create a detached, initialised CompanyRecord
     */
    public CompanyRecord(Integer idCompany, String name, Integer contributors, Integer projects, String occupationArea) {
        super(Company.COMPANY);

        set(0, idCompany);
        set(1, name);
        set(2, contributors);
        set(3, projects);
        set(4, occupationArea);
    }
}
