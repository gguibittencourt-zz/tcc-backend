/*
 * This file is generated by jOOQ.
*/
package br.com.tcc.dao.metadata.tables;


import br.com.tcc.dao.metadata.App;
import br.com.tcc.dao.metadata.Keys;
import br.com.tcc.dao.metadata.tables.records.EvaluationRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Evaluation extends TableImpl<EvaluationRecord> {

    private static final long serialVersionUID = -1603766178;

    /**
     * The reference instance of <code>app.evaluation</code>
     */
    public static final Evaluation EVALUATION = new Evaluation();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EvaluationRecord> getRecordType() {
        return EvaluationRecord.class;
    }

    /**
     * The column <code>app.evaluation.id_evaluation</code>.
     */
    public final TableField<EvaluationRecord, Integer> ID_EVALUATION = createField("id_evaluation", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>app.evaluation.date</code>.
     */
    public final TableField<EvaluationRecord, LocalDateTime> DATE = createField("date", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>app.evaluation.id_user</code>.
     */
    public final TableField<EvaluationRecord, Integer> ID_USER = createField("id_user", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>app.evaluation.status</code>.
     */
    public final TableField<EvaluationRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR.length(30), this, "");

    /**
     * The column <code>app.evaluation.id_measurement_framework</code>.
     */
    public final TableField<EvaluationRecord, Integer> ID_MEASUREMENT_FRAMEWORK = createField("id_measurement_framework", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>app.evaluation.json_evaluation</code>.
     */
    public final TableField<EvaluationRecord, Object> JSON_EVALUATION = createField("json_evaluation", org.jooq.impl.DefaultDataType.getDefaultDataType("json"), this, "");

    /**
     * Create a <code>app.evaluation</code> table reference
     */
    public Evaluation() {
        this("evaluation", null);
    }

    /**
     * Create an aliased <code>app.evaluation</code> table reference
     */
    public Evaluation(String alias) {
        this(alias, EVALUATION);
    }

    private Evaluation(String alias, Table<EvaluationRecord> aliased) {
        this(alias, aliased, null);
    }

    private Evaluation(String alias, Table<EvaluationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return App.APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<EvaluationRecord, Integer> getIdentity() {
        return Keys.IDENTITY_EVALUATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EvaluationRecord> getPrimaryKey() {
        return Keys.KEY_EVALUATION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EvaluationRecord>> getKeys() {
        return Arrays.<UniqueKey<EvaluationRecord>>asList(Keys.KEY_EVALUATION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<EvaluationRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<EvaluationRecord, ?>>asList(Keys.ID_USER_EVALUATION_FK, Keys.ID_MEASUREMENT_FRAMEWORK_EVALUATION_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Evaluation as(String alias) {
        return new Evaluation(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Evaluation rename(String name) {
        return new Evaluation(name, null);
    }
}
