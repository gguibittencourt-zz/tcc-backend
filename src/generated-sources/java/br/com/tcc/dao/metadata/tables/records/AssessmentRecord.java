/*
 * This file is generated by jOOQ.
*/
package br.com.tcc.dao.metadata.tables.records;


import br.com.tcc.dao.metadata.enums.AssessmentStatus;
import br.com.tcc.dao.metadata.tables.Assessment;

import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AssessmentRecord extends UpdatableRecordImpl<AssessmentRecord> implements Record5<Integer, LocalDateTime, Integer, AssessmentStatus, Object> {

    private static final long serialVersionUID = 1352768742;

    /**
     * Setter for <code>app.assessment.id_assessment</code>.
     */
    public void setIdAssessment(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>app.assessment.id_assessment</code>.
     */
    public Integer getIdAssessment() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>app.assessment.date</code>.
     */
    public void setDate(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>app.assessment.date</code>.
     */
    public LocalDateTime getDate() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>app.assessment.id_user</code>.
     */
    public void setIdUser(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>app.assessment.id_user</code>.
     */
    public Integer getIdUser() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>app.assessment.status</code>.
     */
    public void setStatus(AssessmentStatus value) {
        set(3, value);
    }

    /**
     * Getter for <code>app.assessment.status</code>.
     */
    public AssessmentStatus getStatus() {
        return (AssessmentStatus) get(3);
    }

    /**
     * Setter for <code>app.assessment.json_assessment</code>.
     */
    public void setJsonAssessment(Object value) {
        set(4, value);
    }

    /**
     * Getter for <code>app.assessment.json_assessment</code>.
     */
    public Object getJsonAssessment() {
        return (Object) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, LocalDateTime, Integer, AssessmentStatus, Object> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, LocalDateTime, Integer, AssessmentStatus, Object> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Assessment.ASSESSMENT.ID_ASSESSMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field2() {
        return Assessment.ASSESSMENT.DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Assessment.ASSESSMENT.ID_USER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<AssessmentStatus> field4() {
        return Assessment.ASSESSMENT.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Object> field5() {
        return Assessment.ASSESSMENT.JSON_ASSESSMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getIdAssessment();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value2() {
        return getDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getIdUser();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssessmentStatus value4() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Object value5() {
        return getJsonAssessment();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssessmentRecord value1(Integer value) {
        setIdAssessment(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssessmentRecord value2(LocalDateTime value) {
        setDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssessmentRecord value3(Integer value) {
        setIdUser(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssessmentRecord value4(AssessmentStatus value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssessmentRecord value5(Object value) {
        setJsonAssessment(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssessmentRecord values(Integer value1, LocalDateTime value2, Integer value3, AssessmentStatus value4, Object value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AssessmentRecord
     */
    public AssessmentRecord() {
        super(Assessment.ASSESSMENT);
    }

    /**
     * Create a detached, initialised AssessmentRecord
     */
    public AssessmentRecord(Integer idAssessment, LocalDateTime date, Integer idUser, AssessmentStatus status, Object jsonAssessment) {
        super(Assessment.ASSESSMENT);

        set(0, idAssessment);
        set(1, date);
        set(2, idUser);
        set(3, status);
        set(4, jsonAssessment);
    }
}
