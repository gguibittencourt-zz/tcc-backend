/*
 * This file is generated by jOOQ.
*/
package br.com.tcc.dao.metadata.tables;


import br.com.tcc.dao.metadata.App;
import br.com.tcc.dao.metadata.Keys;
import br.com.tcc.dao.metadata.tables.records.DataSourceRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DataSource extends TableImpl<DataSourceRecord> {

    private static final long serialVersionUID = -1075775619;

    /**
     * The reference instance of <code>app.data_source</code>
     */
    public static final DataSource DATA_SOURCE = new DataSource();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DataSourceRecord> getRecordType() {
        return DataSourceRecord.class;
    }

    /**
     * The column <code>app.data_source.id_data_source</code>.
     */
    public final TableField<DataSourceRecord, Integer> ID_DATA_SOURCE = createField("id_data_source", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>app.data_source.id_company</code>.
     */
    public final TableField<DataSourceRecord, Integer> ID_COMPANY = createField("id_company", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>app.data_source.name</code>.
     */
    public final TableField<DataSourceRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "");

    /**
     * The column <code>app.data_source.url</code>.
     */
    public final TableField<DataSourceRecord, String> URL = createField("url", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>app.data_source.authenticated</code>.
     */
    public final TableField<DataSourceRecord, String> AUTHENTICATED = createField("authenticated", org.jooq.impl.SQLDataType.CHAR.length(1), this, "");

    /**
     * The column <code>app.data_source.user</code>.
     */
    public final TableField<DataSourceRecord, String> USER = createField("user", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "");

    /**
     * The column <code>app.data_source.password</code>.
     */
    public final TableField<DataSourceRecord, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "");

    /**
     * Create a <code>app.data_source</code> table reference
     */
    public DataSource() {
        this("data_source", null);
    }

    /**
     * Create an aliased <code>app.data_source</code> table reference
     */
    public DataSource(String alias) {
        this(alias, DATA_SOURCE);
    }

    private DataSource(String alias, Table<DataSourceRecord> aliased) {
        this(alias, aliased, null);
    }

    private DataSource(String alias, Table<DataSourceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return App.APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<DataSourceRecord, Integer> getIdentity() {
        return Keys.IDENTITY_DATA_SOURCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DataSourceRecord> getPrimaryKey() {
        return Keys.KEY_DATA_SOURCE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DataSourceRecord>> getKeys() {
        return Arrays.<UniqueKey<DataSourceRecord>>asList(Keys.KEY_DATA_SOURCE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DataSource as(String alias) {
        return new DataSource(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DataSource rename(String name) {
        return new DataSource(name, null);
    }
}
