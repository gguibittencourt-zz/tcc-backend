/*
 * This file is generated by jOOQ.
*/
package br.com.tcc.dao.metadata.tables;


import br.com.tcc.dao.metadata.App;
import br.com.tcc.dao.metadata.Keys;
import br.com.tcc.dao.metadata.enums.AssessmentStatus;
import br.com.tcc.dao.metadata.tables.records.AssessmentRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Assessment extends TableImpl<AssessmentRecord> {

    private static final long serialVersionUID = -1891164180;

    /**
     * The reference instance of <code>app.assessment</code>
     */
    public static final Assessment ASSESSMENT = new Assessment();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AssessmentRecord> getRecordType() {
        return AssessmentRecord.class;
    }

    /**
     * The column <code>app.assessment.id_assessment</code>.
     */
    public final TableField<AssessmentRecord, Integer> ID_ASSESSMENT = createField("id_assessment", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>app.assessment.date</code>.
     */
    public final TableField<AssessmentRecord, LocalDateTime> DATE = createField("date", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>app.assessment.id_user</code>.
     */
    public final TableField<AssessmentRecord, Integer> ID_USER = createField("id_user", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>app.assessment.status</code>.
     */
    public final TableField<AssessmentRecord, AssessmentStatus> STATUS = createField("status", org.jooq.util.mysql.MySQLDataType.VARCHAR.asEnumDataType(br.com.tcc.dao.metadata.enums.AssessmentStatus.class), this, "");

    /**
     * The column <code>app.assessment.json_assessment</code>.
     */
    public final TableField<AssessmentRecord, Object> JSON_ASSESSMENT = createField("json_assessment", org.jooq.impl.DefaultDataType.getDefaultDataType("json"), this, "");

    /**
     * Create a <code>app.assessment</code> table reference
     */
    public Assessment() {
        this("assessment", null);
    }

    /**
     * Create an aliased <code>app.assessment</code> table reference
     */
    public Assessment(String alias) {
        this(alias, ASSESSMENT);
    }

    private Assessment(String alias, Table<AssessmentRecord> aliased) {
        this(alias, aliased, null);
    }

    private Assessment(String alias, Table<AssessmentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return App.APP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AssessmentRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ASSESSMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AssessmentRecord> getPrimaryKey() {
        return Keys.KEY_ASSESSMENT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AssessmentRecord>> getKeys() {
        return Arrays.<UniqueKey<AssessmentRecord>>asList(Keys.KEY_ASSESSMENT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<AssessmentRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<AssessmentRecord, ?>>asList(Keys.ID_USER_ASSESSMENT_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Assessment as(String alias) {
        return new Assessment(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Assessment rename(String name) {
        return new Assessment(name, null);
    }
}
