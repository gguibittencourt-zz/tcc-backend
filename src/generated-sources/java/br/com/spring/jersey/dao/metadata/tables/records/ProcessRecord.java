/*
 * This file is generated by jOOQ.
*/
package br.com.spring.jersey.dao.metadata.tables.records;


import br.com.spring.jersey.dao.metadata.tables.Process;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProcessRecord extends UpdatableRecordImpl<ProcessRecord> implements Record3<Integer, String, String> {

    private static final long serialVersionUID = -36049226;

    /**
     * Setter for <code>app.process.id_process</code>.
     */
    public void setIdProcess(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>app.process.id_process</code>.
     */
    public Integer getIdProcess() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>app.process.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>app.process.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>app.process.purpose</code>.
     */
    public void setPurpose(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>app.process.purpose</code>.
     */
    public String getPurpose() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Process.PROCESS.ID_PROCESS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Process.PROCESS.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Process.PROCESS.PURPOSE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getIdProcess();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getPurpose();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProcessRecord value1(Integer value) {
        setIdProcess(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProcessRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProcessRecord value3(String value) {
        setPurpose(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProcessRecord values(Integer value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProcessRecord
     */
    public ProcessRecord() {
        super(Process.PROCESS);
    }

    /**
     * Create a detached, initialised ProcessRecord
     */
    public ProcessRecord(Integer idProcess, String name, String purpose) {
        super(Process.PROCESS);

        set(0, idProcess);
        set(1, name);
        set(2, purpose);
    }
}
